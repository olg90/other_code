% Problem 1 --------------------------------------------------------------
normalized_frequency_1 = 0.1;
normalized_frequency_2 = 1/12.8;

% Part 1

sample_duration_256 = 256;
time_duration_256 = 0:256;
sinusoidal_256_1 = sin(2*pi*normalized_frequency_1*time_duration_256);
sinusoidal_FFT_256_1 = fft(sinusoidal_256_1, sample_duration_256);
sin_mag_256_1 = abs(sinusoidal_FFT_256_1);

sample_duration_1024 = sample_duration_256;
time_duration_1024 = time_duration_256
sinusoidal_1024_1 = sin(2*pi*normalized_frequency_1*time_duration_1024);
sinusoidal_FFT_1024_1 = fft(sinusoidal_1024_1, sample_duration_1024);
sin_mag_1024_1 = abs(sinusoidal_FFT_1024_1);

% Part 2

sinusoidal_256_2 = sin(2*pi*normalized_frequency_2*time_duration_256);
sinusoidal_FFT_256_2 = fft(sinusoidal_256_2, sample_duration_256);
sin_mag_256_2 = abs(sinusoidal_FFT_256_2);

sinusoidal_1024_2 = sin(2*pi*normalized_frequency_2*time_duration_1024);
sinusoidal_FFT_1024_2 = fft(sinusoidal_1024_2, sample_duration_1024);
sin_mag_1024_2 = abs(sinusoidal_FFT_1024_2);

% Plotting

subplot(2,2,1)
plot(linspace(0, 0.5, length(sin_mag_256_1)), sin_mag_256_1)
title("N = 256, f_n = 0.1")
xlabel('frequency, f')
ylabel('|X(f)|')

subplot(2,2,2)
plot(linspace(0, 0.5, length(sin_mag_1024_1)), sin_mag_1024_1)
title("N = 1024, f_n = 0.1")
xlabel('frequency, f')
ylabel('|X(f)|')

subplot(2,2,3)
plot(linspace(0, 0.5, length(sin_mag_256_2)), sin_mag_256_2)
title("N = 256, f_n = 1/12.8")
xlabel('frequency, f')
ylabel('|X(f)|')

subplot(2,2,4)
plot(linspace(0, 0.5, length(sin_mag_1024_2)), sin_mag_1024_2)
title("N = 1024, f_n = 1/12.8")
xlabel('frequency, f')
ylabel('|X(f)|')

%%
% Problem 2 --------------------------------------------------------------

f1 = 10;
f2 = 11;

F_s_1 = 100;
F_s_2 = 2*F_s_1;

n_datapoints_1 = 25;
n_datapoints_2 = 50;
n_datapoints_3 = 150;

N1 = 64;
N2 = 256;
N3 = 512;

n1 = 0:(n_datapoints_1 - 1);
s1 = sin(2*pi*f1/F_s_1*n1) + sin(2*pi*f2/F_s_1*n1);
mag_64_1 = abs(fft(s1,N1));
mag_256_1 = abs(fft(s1,N2));

n2 = 0:(n_datapoints_2 - 1);
s2 = sin(2*pi*f1/F_s_2*n2) + sin(2*pi*f2/F_s_2*n2);
mag_64_2 = abs(fft(s2,N1));
mag_256_2 = abs(fft(s2,N2));

n3 = 0:(n_datapoints_3 - 1);
s3 = sin(2*pi*f1/F_s_1*n3) + sin(2*pi*f2/F_s_1*n3);
mag_256_3 = abs(fft(s3,N2));
mag_512_3 = abs(fft(s3,N3));

figure;

subplot(3,2,1)
plot(mag_64_1)
title('F_s = 100 Hz, data points = 25, N = 64')
subplot(3,2,2)
plot(mag_256_1)
title('F_s = 100 Hz, data points = 25, N = 256')

subplot(3,2,3)
plot(mag_64_2)
title('F_s = 200 Hz, data points = 50, N = 64')
subplot(3,2,4)
plot(mag_256_2)
title('F_s = 200 Hz, data points = 50, N = 256')

subplot(3,2,5)
plot(mag_256_3)
title('F_s = 100 Hz, data points = 150, N = 256')
subplot(3,2,6)
plot(mag_512_3)
title('F_s = 100 Hz, data points = 150, N = 512')

% Repeat with hamming window

n1 = 0:(n_datapoints_1 - 1);
s1 = sin(2*pi*f1/F_s_1*n1) + sin(2*pi*f2/F_s_1*n1);
s1 = s1 .* hamming(length(s1))'
mag_64_1 = abs(fft(s1,N1));
mag_256_1 = abs(fft(s1,N2));

n2 = 0:(n_datapoints_2 - 1);
s2 = sin(2*pi*f1/F_s_2*n2) + sin(2*pi*f2/F_s_2*n2);
s2 = s2 .* hamming(length(s2))'
mag_64_2 = abs(fft(s2,N1));
mag_256_2 = abs(fft(s2,N2));

n3 = 0:(n_datapoints_3 - 1);
s3 = sin(2*pi*f1/F_s_1*n3) + sin(2*pi*f2/F_s_1*n3);
s3 = s3 .* hamming(length(s3))';
mag_256_3 = abs(fft(s3,N2));
mag_512_3 = abs(fft(s3,N3));

figure;

subplot(3,2,1)
plot(mag_64_1)
title('F_s = 100 Hz, data points = 25, N = 64')
subplot(3,2,2)
plot(mag_256_1)
title('F_s = 100 Hz, data points = 25, N = 256')

subplot(3,2,3)
plot(mag_64_2)
title('F_s = 200 Hz, data points = 50, N = 64')
subplot(3,2,4)
plot(mag_256_2)
title('F_s = 200 Hz, data points = 50, N = 256')

subplot(3,2,5)
plot(mag_256_3)
title('F_s = 100 Hz, data points = 150, N = 256')
subplot(3,2,6)
plot(mag_512_3)
title('F_s = 100 Hz, data points = 150, N = 512')

%%
% Problem 3 --------------------------------------------------------------
f1= 0.1;
f2= 0.12;

A1 = 1;
A2 = 0.01;

n_datapoints = 256;
N = 512;

n = 0:n_datapoints - 1;
s = A1*sin(2*pi*f1*n) + A2*sin(2*pi*f2*n);

% Rectangular window
rect_signal = s .* rectwin(length(s))';
mag_signal = abs(fft(rect_signal,N));
subplot(1,2,1)
plot(mag_signal)
title('Rectangular')

% Hamming window
hamming_signal = s .* hamming(length(s))';
mag_hamming = abs(fft(hamming_signal,n_datapoints));
subplot(1,2,2)
plot(mag_hamming)
title('Hamming')

%%
% Problem 4 --------------------------------------------------------------

'C:\Users\olive\OneDrive\Desktop\PhD\2-Classes\DSP\prob_4_data.mat'



y4 = load('C:\Users\olgud\OneDrive\Desktop\PhD\1-Classes\DSP\prob_4_data.mat');
% y4 = load('C:\Users\olive\OneDrive\Desktop\PhD\2-Classes\DSP\prob_4_data.mat');
y4 = y4.y;

subplot(1,2,1)
plot(y4)
title('prob 4 data.mat')

N4 = 2^10;
fft4 = fft(y4, N4);
abs4 = 20*log10(abs(fft4));
% abs4 = abs(fft4);

subplot(1,2,2)
plot(abs4) % Looks like mainlobe at 61 height at 0
% and medium one at 40 height at 103
title(['FFT at N = ', num2str(N4)])

%%
% Problem 5 --------------------------------------------------------------

y5 = load('C:\Users\olgud\OneDrive\Desktop\PhD\1-Classes\DSP\prob_5_data.mat');
% y5 = load('C:\Users\olive\OneDrive\Desktop\PhD\2-Classes\DSP\prob_5_data.mat');
y5 = y5.y; % length 200, 2^3*3*5^2

y_len = length(y5); % 200, 2^3*5^2

% Block averaging without overlap

N = 2^12;
n_blocks = 60;
block_size = y_len / n_blocks; % 30

block_matrix = zeros(N, n_blocks);
for i=1:n_blocks
    start_index = (i-1)*block_size + 1;
    end_index = i*block_size-1; 
    block_i = y5(start_index:end_index);
    FFT_i = fft(block_i, N);
    block_matrix(:, i) = FFT_i;
end
abs_signal = mean(abs(block_matrix), 2);

plot(20*log10(abs_signal))

% Block averaging with overlap

block_size_2 = 80;
overlap = 50;

n_blocks_2 = floor((length(y5)-overlap)/(block_size_2-overlap));
% Calculated n_blocks by solving for n in: b + (n - 1)(b - v) = L, where b is the
% block size, n is the number of blocks total, v is the overlap between
% blocks, and L is the length of the signal.

N_2 = 2^10;
block_matrix_2 = zeros(N_2, n_blocks_2);

for i = 1:n_blocks_2
    start_index = (i-1)*(block_size_2-overlap) + 1;
    end_index = start_index + block_size_2 - 1;
    block = y5(start_index:end_index);
    block_matrix_2(:, i) = fft(block, N_2);
end

mag_signal_overlap = 20*log10(mean(abs(block_matrix_2), 2));

subplot(1,2,1)
plot(y5)
title('Data')

subplot(1,2,1)
plot(20*log10(abs_signal(1:N/2)))
title('Block averaging')

subplot(1,2,2)
plot(mag_signal_overlap);
title('Block avg. overlap = 40, size = 80, N = 2^{10}')
