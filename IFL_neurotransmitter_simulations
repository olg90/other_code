import numpy as np
from matplotlib.pyplot import plot as pt
import matplotlib.pyplot as plt
def kbar(z, k, k1, ttype):
    if ttype=='n':
        return k/(1+k1*z)
    if ttype=='p':
        return k*k1*z/(1+k1*z)
f=2
pr=0.1 # release probability

M=100
nu=0 # unoccupied states
no=M # occupied states
nr=0 #  repair states
z=0 # neurotransmitters in cleft

k=4 # refilling constant 1
k1=1 # refilling constant 2
kr=7 # repair rate
gammaz=1 # neurotransmitter decay
cz=10 # number of neurotransmitters per vesicle

ttype='n'
e=1e-6
tdelta = 0.01
tcurr=0
tmax=100
nulist=[]
nolist=[]
nrlist=[]
zlist=[]
timelist=[]

while tcurr < tmax:
# =============================================================================
#     print(tcurr)
# =============================================================================
    t0=np.random.exponential(1/f)
    t1=np.random.exponential(1/(kbar(z, k, k1, ttype)*(M-nu)+e))
    t2=np.random.exponential(1/(gammaz*z + e))
    t3=np.random.exponential(1/kr)
    tmeasure = tdelta
    tlist=[t0,t1,t2,t3,tmeasure]
    tmin=np.min(tlist)
    argmin = np.argmin(tlist)
    if argmin==0:
        b = np.random.binomial(no, pr)
        no = no - b
        nr = nr + b
        z = z + cz*b
    if argmin == 1:
        if nu > 0:
            nu=nu-1
            no=no+1
    if argmin == 2:
        if z > 0:
            z = z - 1
    if argmin == 3:
        if (nr > 0) and (nu < M):
            nr = nr-1
            nu = nu+1
    tmeasure-=tmin
    if tmeasure == 0:
        tmeasure=tdelta
    nulist.append(nu)
    nolist.append(no)
    nrlist.append(nr)
    zlist.append(z)
    tcurr += tmin
    timelist.append(tcurr)
    
pt(timelist,nulist, label='nu')
pt(timelist,nolist, label = 'no')
pt(timelist,nrlist,label='nr')
pt(timelist,zlist, label='z')
plt.legend()
plt.show()
